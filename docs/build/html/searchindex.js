Search.setIndex({"docnames": ["compilation", "index", "private_api", "public_api"], "filenames": ["compilation.rst", "index.rst", "private_api.rst", "public_api.rst"], "titles": ["<strong>Compilation Process</strong>", "Welcome to MakkaPakka\u2019s documentation!", "<strong>Full API</strong>", "<strong>Public API</strong>"], "terms": {"i": [0, 1, 2, 3], "split": [0, 2, 3], "three": 0, "thi": [0, 1, 2, 3], "section": [0, 2], "guid": 0, "reader": 0, "though": 0, "taken": 0, "each": [0, 2, 3], "object": [0, 2, 3], "translat": [0, 1, 2], "text": 0, "from": [0, 2, 3], "mkpk": [0, 2, 3], "file": [2, 3], "an": [0, 2, 3], "intermedi": [0, 2, 3], "represent": [0, 2, 3], "In": 0, "first": [0, 2], "simpl": 0, "iter": [0, 2], "perform": 0, "where": [0, 2], "defin": [0, 2], "us": [0, 1, 2, 3], "ar": [0, 2], "store": [0, 2], "state": 0, "which": [0, 1, 2, 3], "determin": [0, 2], "put": 0, "line": [0, 2], "underneath": 0, "As": 0, "result": [0, 2, 3], "option": [0, 2], "set": 0, "code": [0, 1, 2, 3], "collect": 0, "under": [0, 2], "mkpkfunction": [0, 2], "name": [0, 2, 3], "its": [0, 2], "argument": [0, 2], "beneath": 0, "The": [0, 1, 2, 3], "follow": 0, "class": [0, 2], "definit": [0, 2], "A": [0, 2, 3], "strcture": 0, "encapsul": 0, "makka": [0, 1, 2, 3], "pakka": [0, 1, 2, 3], "def": 0, "__init__": 0, "self": 0, "str": [0, 2, 3], "list": [0, 2, 3], "content": 0, "constructor": 0, "param": [0, 2], "uniqu": 0, "arug": 0, "arguement": 0, "expect": [0, 2], "is_main": 0, "main": [0, 2, 3], "num_argu": 0, "len": 0, "mkpkdata": [0, 2], "contain": [0, 2], "label": [0, 2, 3], "valu": [0, 2, 3], "interpret": [0, 2], "type": [0, 2], "mkpkdatatyp": [0, 2], "identifi": 0, "none": [0, 2], "0": [0, 2, 3], "int": [0, 2, 3], "constant": 0, "union": 0, "assign": [0, 2, 3], "itself": 0, "mkpkgadget": [0, 2], "virtual": 0, "memori": [0, 2, 3], "address": [0, 2, 3], "instruct": [0, 1], "befor": [0, 2], "ret": 0, "rop": [1, 2], "memory_loc": 0, "target": [0, 2], "binari": [0, 2, 3], "assembli": [1, 2], "up": 0, "until": 0, "reach": 0, "consid": 0, "all": [0, 1, 2, 3], "sourc": [0, 2, 3], "e": [0, 2], "top": [0, 1, 2], "mkpkmetadata": [0, 2], "ha": [0, 2, 3], "meta": 0, "associ": [0, 2], "singl": [0, 2, 3], "mkpkir": [0, 2, 3], "complet": 0, "program": [0, 1, 2], "languag": [0, 1], "popul": 0, "dure": [0, 2, 3], "can": [0, 2], "found": [0, 2, 3], "resolv": 2, "refer": [0, 2], "extern": 0, "start": 0, "other": 0, "mkpk_filenam": [0, 2], "direct": [0, 2, 3], "therefor": [0, 1, 2], "extract": [0, 2], "filenam": [0, 2], "current": 0, "attempt": [0, 2], "specifi": [0, 2, 3], "done": 0, "search": [0, 2], "directori": [0, 2], "makka_pakka": [0, 2, 3], "linker_path": [0, 2], "shown": 0, "below": [0, 2], "ad": 0, "default": 0, "linker": [0, 2, 3], "path": [0, 2, 3], "runtim": 0, "highest": 0, "prioriti": [0, 2], "logic": 0, "abstract": 0, "prioritylist": 0, "implement": [0, 1], "priority_list": 0, "If": [0, 2], "mkpklinkingerror": 0, "rais": [0, 2], "look": 0, "linkabl": [0, 2], "default_linker_path": 0, "usr": 0, "local": 0, "lib": 0, "home": 0, "__file__": 0, "parent": 0, "onc": 0, "again": 0, "also": 0, "To": [], "avoid": 0, "cyclic": 0, "caus": 0, "infinit": 0, "loop": 0, "custom": 0, "directedgraph": 0, "directed_graph": 0, "diagram": 0, "illustr": 0, "accept": 0, "unaccept": 0, "graph": 0, "case": 0, "mkpkcyclicdepend": 0, "error": 0, "overal": 0, "goal": 0, "creat": [0, 2], "input": 0, "when": [0, 1, 2], "end": [0, 2], "multipl": [0, 2], "conflict": [0, 2, 3], "etc": 0, "issu": 0, "one": [0, 2, 3], "futur": 0, "namespac": 0, "mai": 0, "prevent": 0, "common": 0, "For": [0, 1, 2], "now": 0, "librari": 0, "full": [0, 1], "uppercas": 0, "mean": 0, "user": 0, "safe": 0, "entir": 0, "lowercas": 0, "instanc": 0, "exist": [0, 2], "integ": [0, 2], "directli": 0, "string": [0, 2], "rel": 0, "referenc": 0, "doesn": 0, "t": [0, 2], "ignor": 0, "handl": 0, "pass": [0, 2, 3], "over": 0, "call": [0, 2, 3], "recurs": [0, 2, 3], "anoth": 0, "unless": 0, "same": [0, 2], "approach": 0, "mkpkprocessingerror": [0, 2], "push": 0, "mkpkargumentset": [0, 2], "them": [0, 2], "made": [0, 1], "onto": 0, "stack": 0, "being": 0, "ani": [0, 2], "remain": 0, "within": 0, "assum": 0, "correspond": [0, 2], "cannot": 0, "suitabl": 0, "sequenc": 0, "write": [1, 2, 3], "netwid": 1, "nasm": [1, 2], "It": [1, 2], "addit": 1, "featur": [0, 1], "tradit": 1, "function": [1, 2, 3], "automat": 1, "link": [1, 2, 3], "replac": [1, 2], "wa": [1, 2, 3], "built": 1, "make": [0, 1, 2], "easier": 1, "sit": 1, "cave": [1, 2, 3], "must": [0, 1, 2], "posit": 1, "independ": 1, "written": [0, 1, 2, 3], "correctli": 1, "how": [1, 2], "instal": 1, "check": [1, 2, 3], "out": 1, "project": [1, 2], "research": 1, "purpos": 1, "should": [1, 2], "malici": 1, "inject": [1, 2], "exampl": [0, 1, 2], "compil": [1, 2, 3], "process": 1, "phase": [1, 2, 3], "pars": 1, "integr": 1, "data": [1, 2, 3], "structur": [1, 2], "except": 1, "public": [1, 2], "api": 1, "elf": 1, "caver": 1, "modul": 1, "index": [1, 2, 3], "everi": 2, "either": 2, "privat": 2, "highli": 2, "recommend": 2, "document": 2, "instead": 2, "_convert_heading_name_to_typ": 2, "headingtyp": 2, "convert": 2, "head": [2, 3], "paramet": [2, 3], "return": [2, 3], "invalid": 2, "_split_into_head": 2, "mkpk_filepath": [2, 3], "mkpkline": 2, "gadget": 2, "filepath": [2, 3], "raw": 2, "parse_makka_pakka": [2, 3], "gener": [2, 3], "parse_head": 2, "_extract_args_from_funct": 2, "arg": 2, "definin": 2, "g": 2, "func_nam": 2, "ag": 2, "indic": 2, "_interpret_data_typ": 2, "tupl": [2, 3], "mkpkparsingerror": 2, "couldn": 2, "parse_data": 2, "pack": 2, "parse_funct": 2, "strcutur": 2, "parse_gadget": 2, "parse_metadata": 2, "metadata": [2, 3], "detect_head": 2, "headingstyl": 2, "enum": 2, "style": [0, 2], "heading_nam": 2, "single_head": 2, "double_head": 2, "_assert_valid_mkpk_nam": 2, "assert": 2, "valid": [2, 3], "debug": 2, "mkpknameerror": 2, "detect_heading_in_lin": 2, "detect": 2, "no_head": 2, "_assert_no_conflict_in_data_label": 2, "lh": 2, "rh": 2, "_assert_no_conflict_in_funct": 2, "_assert_no_conflict_in_gadget_address": 2, "locat": [0, 2], "_combine_mkpkir": 2, "combin": 2, "kept": 2, "second": 2, "lost": 2, "merge_mkpkir": [2, 3], "merg": [2, 3], "readi": [2, 3], "intend": [2, 3], "parse_with_link": [2, 3], "respons": [2, 3], "sever": [2, 3], "do": [2, 3], "conflit": [2, 3], "ropgadget": [2, 3], "parse_link_and_merg": [2, 3], "pakkka": [2, 3], "repres": [2, 3], "have": [0, 2, 3], "been": [0, 2, 3], "depend": [2, 3], "remark": [2, 3], "ir": [2, 3], "attribut": [2, 3], "link_depth": [2, 3], "number": [2, 3], "between": [2, 3], "1": [2, 3], "linkerpath": 2, "mkpk_main_filepath": 2, "find": [0, 2, 3], "add_path_to_link": 2, "dir_path": 2, "prioritytyp": 2, "add": 2, "give": 2, "new": 2, "find_mkpk_fil": 2, "through": [0, 2], "basenam": 2, "higher": 2, "select": 2, "absolut": 2, "process_makka_pakka": [2, 3], "mkpkcode": [2, 3], "run": [2, 3], "data_replac": 2, "_extract_data_refer": 2, "code_lin": 2, "mani": 2, "format": [2, 3], "were": 2, "_extract_label_from_refer": 2, "data_refer": 2, "appl": 2, "would": 2, "_replace_reference_with_valu": 2, "archiv": 2, "process_data_replac": 2, "num": 2, "my_func": 2, "mov": 2, "rax": 2, "Will": 2, "becom": 2, "function_replac": 2, "_assert_correct_num_of_arg": 2, "curr_func": 2, "passed_arg": 2, "equal": 2, "_get_function_by_name_or_assert": 2, "get": [2, 3], "processingerror": 2, "_get_line_as_function_cal": 2, "mkpkfunctioncal": 2, "retrun": 2, "_get_ref_value_from_argu": 2, "func": 2, "": 2, "These": 2, "_parse_line_as_function_cal": 2, "process_function_replac": 2, "func_1": 2, "2": 2, "arg1": 2, "ecx": 2, "execut": 2, "_format_code_into_asm_funct": 2, "_start": [0, 2], "so": 2, "standalon": [0, 2], "obj": 2, "_translate_mkpkdata_to_asm": 2, "_write_code_to_fil": 2, "output_filepath": [2, 3], "output": [0, 2], "random": [2, 3], "tmp": [2, 3], "uuid": [2, 3], "integrate_makka_pakka": [2, 3], "elf_cav": [2, 3], "code_cav": [2, 3], "_get_end_of_sect": 2, "offset": [0, 2, 3], "final": 2, "_get_end_of_seg": 2, "segment": 2, "_get_executable_seg": 2, "filter": 2, "just": 2, "those": 2, "flag": 2, "_get_last_section_in_seg": 2, "last": 2, "get_code_cav": [2, 3], "size": [2, 3], "file_permiss": 2, "is_execut": 2, "bool": 2, "true": 2, "permiss": 2, "is_writ": 2, "writabl": 2, "permission_to_str": 2, "form": 2, "rw": 2, "rx": 2, "print_elf": 2, "pprint_head": 2, "print": 2, "header": 2, "stdout": 2, "readabl": 2, "pprint_sect": 2, "tabl": 2, "pprint_seg": 2, "table_formatt": 2, "print_tabl": 2, "column": 2, "kwarg": 2, "dict": 2, "pretti": 2, "order": 2, "length": 2, "align": 2, "desir": 2, "left": 2, "right": 2, "centr": 2, "lead": 2, "trail": 2, "space": 2, "appli": 2, "entri": 2, "pad": 2, "blank": 2, "dynam": 2, "calcul": 2, "variad": 2, "two": 2, "table_rows_to_column": 2, "row": 2, "convieni": 2, "correct": 2, "injector": 2, "binary_injector": 2, "_get_shellcode_from_nasm": 2, "nasm_filepath": 2, "shellcod": 2, "byte": 2, "_inject_shellcode_at_offset": 2, "target_binari": 2, "given": 2, "patch": 2, "inject_nasm_into_binari": 2, "target_binary_filepath": 2, "patch_entrypoint": 2, "whether": 2, "entrypoint": 2, "point": 2, "patch_exit": 2, "exit": 2, "throw": 2, "insufficientcodecav": 2, "There": 2, "larg": 2, "enough": 2, "mkpkinvalidparamet": 2, "malform": 2, "byte_extract": 2, "extract_byt": 2, "binary_filepath": 2, "hex": 2, "concaten": 2, "continu": 2, "12": 2, "34": 2, "56": 2, "to_little_endian_32bit": 2, "32": 2, "bit": 2, "littl": 2, "endian": 2, "arrai": 2, "target_arch": 2, "asm": 2, "architectur": 2, "redirect_execut": 2, "change_entrypoint": 2, "chang": 2, "elf64": 2, "patch_pltsec_exit": 2, "inject_offset": 2, "plt": 2, "sec": 2, "certain": 2, "condit": 2, "compli": 2, "pie": 2, "restrict": 2, "save": 2, "unimpl": 0, "multi": 0, "oper": 0, "semant": 0, "equival": 0, "lastli": 0, "some": 0, "need": 0, "compat": 0, "firstli": 0, "insert": 0, "bottom": 0, "specfi": 0}, "objects": {"makka_pakka.elf_caver.caver": [[3, 0, 0, "-", "code_caver"], [2, 0, 0, "-", "file_permissions"]], "makka_pakka.elf_caver.caver.code_caver": [[2, 1, 1, "", "_get_end_of_section"], [2, 1, 1, "", "_get_end_of_segment"], [2, 1, 1, "", "_get_executable_segments"], [2, 1, 1, "", "_get_last_section_in_segment"], [3, 1, 1, "", "get_code_caves"]], "makka_pakka.elf_caver.caver.file_permissions": [[2, 1, 1, "", "is_executable"], [2, 1, 1, "", "is_writable"], [2, 1, 1, "", "permission_to_str"]], "makka_pakka.elf_caver.formatting": [[2, 0, 0, "-", "print_elf"], [2, 0, 0, "-", "table_formatter"]], "makka_pakka.elf_caver.formatting.print_elf": [[2, 1, 1, "", "pprint_header"], [2, 1, 1, "", "pprint_sections"], [2, 1, 1, "", "pprint_segments"]], "makka_pakka.elf_caver.formatting.table_formatter": [[2, 1, 1, "", "print_table"], [2, 1, 1, "", "table_rows_to_columns"]], "makka_pakka.elf_caver.injector": [[2, 0, 0, "-", "binary_injector"], [2, 0, 0, "-", "byte_extraction"], [2, 0, 0, "-", "compile"], [2, 0, 0, "-", "redirect_execution"]], "makka_pakka.elf_caver.injector.binary_injector": [[2, 1, 1, "", "_get_shellcode_from_nasm"], [2, 1, 1, "", "_inject_shellcode_at_offset"], [2, 1, 1, "", "inject_nasm_into_binary"]], "makka_pakka.elf_caver.injector.byte_extraction": [[2, 1, 1, "", "extract_bytes"], [2, 1, 1, "", "to_little_endian_32bit"]], "makka_pakka.elf_caver.injector.compile": [[2, 1, 1, "", "compile"]], "makka_pakka.elf_caver.injector.redirect_execution": [[2, 1, 1, "", "change_entrypoint"], [2, 1, 1, "", "patch_pltsec_exit"]], "makka_pakka.integrating": [[3, 0, 0, "-", "integrate"]], "makka_pakka.integrating.integrate": [[2, 1, 1, "", "_format_code_into_asm_function"], [2, 1, 1, "", "_translate_mkpkdata_to_asm"], [2, 1, 1, "", "_write_code_to_file"], [3, 1, 1, "", "integrate_makka_pakka"]], "makka_pakka.linking": [[3, 0, 0, "-", "linker"], [2, 0, 0, "-", "linker_path"]], "makka_pakka.linking.linker": [[2, 1, 1, "", "_assert_no_conflict_in_data_labels"], [2, 1, 1, "", "_assert_no_conflict_in_functions"], [2, 1, 1, "", "_assert_no_conflict_in_gadget_addresses"], [2, 1, 1, "", "_combine_MKPKIRs"], [3, 1, 1, "", "merge_MKPKIRs"], [3, 1, 1, "", "parse_link_and_merge"], [3, 1, 1, "", "parse_with_linking"]], "makka_pakka.linking.linker_path": [[2, 2, 1, "", "LinkerPath"]], "makka_pakka.linking.linker_path.LinkerPath": [[2, 3, 1, "", "add_path_to_linker"], [2, 3, 1, "", "find_mkpk_file"]], "makka_pakka.parsing": [[2, 0, 0, "-", "detect_headings"], [3, 0, 0, "-", "parse"], [2, 0, 0, "-", "parse_headings"]], "makka_pakka.parsing.detect_headings": [[2, 2, 1, "", "HeadingStyle"], [2, 2, 1, "", "HeadingType"], [2, 1, 1, "", "_assert_valid_mkpk_name"], [2, 1, 1, "", "detect_heading_in_line"]], "makka_pakka.parsing.parse": [[2, 1, 1, "", "_convert_heading_name_to_type"], [2, 1, 1, "", "_split_into_headings"], [3, 1, 1, "", "parse_makka_pakka"]], "makka_pakka.parsing.parse_headings": [[2, 1, 1, "", "_extract_args_from_function"], [2, 1, 1, "", "_interpret_data_type"], [2, 1, 1, "", "parse_data"], [2, 1, 1, "", "parse_functions"], [2, 1, 1, "", "parse_gadgets"], [2, 1, 1, "", "parse_metadata"]], "makka_pakka.processing": [[2, 0, 0, "-", "data_replacement"], [2, 0, 0, "-", "function_replacement"], [3, 0, 0, "-", "process"]], "makka_pakka.processing.data_replacement": [[2, 1, 1, "", "_extract_data_references"], [2, 1, 1, "", "_extract_label_from_reference"], [2, 1, 1, "", "_replace_reference_with_value"], [2, 1, 1, "", "process_data_replacement"]], "makka_pakka.processing.function_replacement": [[2, 1, 1, "", "_assert_correct_num_of_args"], [2, 1, 1, "", "_get_function_by_name_or_assert"], [2, 1, 1, "", "_get_line_as_function_call"], [2, 1, 1, "", "_get_ref_value_from_arguments"], [2, 1, 1, "", "_parse_line_as_function_call"], [2, 1, 1, "", "process_function_replacement"]], "makka_pakka.processing.process": [[3, 1, 1, "", "process_makka_pakka"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"compil": 0, "process": [0, 2, 3], "phase": 0, "pars": [0, 2, 3], "step": 0, "1": 0, "head": 0, "detect": 0, "2": 0, "function": 0, "3": 0, "data": 0, "4": 0, "gadget": 0, "5": 0, "metadata": 0, "6": 0, "collat": 0, "structur": 0, "link": 0, "discov": 0, "depend": 0, "find": [], "merg": 0, "ir": 0, "symbol": 0, "replac": 0, "integr": [0, 2, 3], "welcom": 1, "makkapakka": 1, "": 1, "document": 1, "overview": 1, "indic": 1, "tabl": 1, "full": 2, "api": [2, 3], "elf": [2, 3], "caver": [2, 3], "public": 3, "rop": 0, "assembli": 0, "format": 0, "write": 0, "To": 0, "file": 0, "resolv": 0}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to MakkaPakka\u2019s documentation!": [[1, "welcome-to-makkapakka-s-documentation"]], "Overview": [[1, "overview"]], "Indices and tables": [[1, "indices-and-tables"]], "Parsing": [[2, "id1"], [3, "elf-caver"], [0, "parsing"]], "Processing": [[2, "id2"], [3, "id2"], [0, "processing"]], "Integrating": [[2, "id3"], [3, "id3"], [0, "integrating"]], "Full API": [[2, "full-api"]], "ELF Caver": [[2, "id4"], [3, "id4"]], "Public API": [[3, "public-api"]], "Compilation Process": [[0, "compilation-process"]], "Phases": [[0, "phases"]], "Step 1: Heading Detection": [[0, "step-1-heading-detection"]], "Step 2: Parse Functions": [[0, "step-2-parse-functions"]], "Step 3: Parse Data": [[0, "step-3-parse-data"]], "Step 4: Parse Gadgets": [[0, "step-4-parse-gadgets"]], "Step 5: Parse Metadata": [[0, "step-5-parse-metadata"]], "Step 6: Collate Structures": [[0, "step-6-collate-structures"]], "Linking": [[0, "linking"]], "Step 1: Discover Dependencies": [[0, "step-1-discover-dependencies"]], "Step 2: Resolve Dependencies": [[0, "step-2-resolve-dependencies"]], "Step 3: Parse Dependencies": [[0, "step-3-parse-dependencies"]], "Step 4: Merge IR Symbols": [[0, "step-4-merge-ir-symbols"]], "Step 1: Data Replacement": [[0, "step-1-data-replacement"]], "Step 2: Function Replacement": [[0, "step-2-function-replacement"]], "Step 1: ROP Gadget Replacement": [[0, "step-1-rop-gadget-replacement"]], "Step 2: Assembly Formatting": [[0, "step-2-assembly-formatting"]], "Step 3: Write To File": [[0, "step-3-write-to-file"]]}, "indexentries": {}})
